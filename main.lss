
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000c2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  00000118  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000054  00000000  00000000  000007e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00000838  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000034  00000000  00000000  00000858  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000017c  00000000  00000000  0000088c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000011c  00000000  00000000  00000a08  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000014c  00000000  00000000  00000b24  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000040  00000000  00000000  00000c70  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000ee  00000000  00000000  00000cb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000024  00000000  00000000  00000d9e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 00000038  00000000  00000000  00000dc2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 4a 00 	call	0x94	; 0x94 <main>
  78:	0c 94 5f 00 	jmp	0xbe	; 0xbe <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <io_init>:
  return 0;
}

void io_init (void) {
  //1 = output, 0 = input
  DDRD = _BV(PD5) | _BV(PD6);
  80:	80 e6       	ldi	r24, 0x60	; 96
  82:	8a b9       	out	0x0a, r24	; 10
}
  84:	08 95       	ret

00000086 <pwm_init>:

void pwm_init(void) {
  TCCR0A = _BV(COM0A0) | _BV(COM0B0) | _BV(WGM01);
  86:	82 e5       	ldi	r24, 0x52	; 82
  88:	84 bd       	out	0x24, r24	; 36
  TCCR0B = _BV(CS00);
  8a:	81 e0       	ldi	r24, 0x01	; 1
  8c:	85 bd       	out	0x25, r24	; 37
  OCR0A = 0x00;
  8e:	17 bc       	out	0x27, r1	; 39
  OCR0B = 0x00;
  90:	18 bc       	out	0x28, r1	; 40
}
  92:	08 95       	ret

00000094 <main>:
  return 0;
}

void io_init (void) {
  //1 = output, 0 = input
  DDRD = _BV(PD5) | _BV(PD6);
  94:	80 e6       	ldi	r24, 0x60	; 96
  96:	8a b9       	out	0x0a, r24	; 10
void pwm_init(void);     // Initializes PWM
//======================

int main (void) {
  io_init(); //Setup IO pins and defaults
  pwm_init();
  98:	0e 94 43 00 	call	0x86	; 0x86 <pwm_init>

  while(1) {
    for (int i = 0x00; i < 0x7f; ++i) {
  9c:	80 e0       	ldi	r24, 0x00	; 0
  9e:	90 e0       	ldi	r25, 0x00	; 0
      OCR0A = i; // these are probably pins 5 and 61`o
  a0:	87 bd       	out	0x27, r24	; 39
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a2:	2f ef       	ldi	r18, 0xFF	; 255
  a4:	33 ed       	ldi	r19, 0xD3	; 211
  a6:	40 e3       	ldi	r20, 0x30	; 48
  a8:	21 50       	subi	r18, 0x01	; 1
  aa:	30 40       	sbci	r19, 0x00	; 0
  ac:	40 40       	sbci	r20, 0x00	; 0
  ae:	e1 f7       	brne	.-8      	; 0xa8 <main+0x14>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <main+0x1e>
  b2:	00 00       	nop
int main (void) {
  io_init(); //Setup IO pins and defaults
  pwm_init();

  while(1) {
    for (int i = 0x00; i < 0x7f; ++i) {
  b4:	01 96       	adiw	r24, 0x01	; 1
  b6:	8f 37       	cpi	r24, 0x7F	; 127
  b8:	91 05       	cpc	r25, r1
  ba:	84 f7       	brge	.-32     	; 0x9c <main+0x8>
  bc:	f1 cf       	rjmp	.-30     	; 0xa0 <main+0xc>

000000be <_exit>:
  be:	f8 94       	cli

000000c0 <__stop_program>:
  c0:	ff cf       	rjmp	.-2      	; 0xc0 <__stop_program>
